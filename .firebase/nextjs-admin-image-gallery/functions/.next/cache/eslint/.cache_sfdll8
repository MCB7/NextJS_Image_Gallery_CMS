[{"C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\pages\\api\\hello.ts":"1","C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\pages\\index.tsx":"2","C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\pages\\_app.tsx":"3","C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\pages\\_document.tsx":"4","C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\components\\UploadArt.tsx":"5","C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\pages\\dashboard.tsx":"6","C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\pages\\login.tsx":"7","C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\components\\DeleteArt.tsx":"8","C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\components\\navbar.tsx":"9","C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\components\\ProtectedRoute.tsx":"10","C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\components\\UpdateArt.tsx":"11","C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\pages\\Delete.tsx":"12","C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\pages\\Update.tsx":"13","C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\pages\\Upload.tsx":"14","C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\components\\UpdateBio.tsx":"15"},{"size":307,"mtime":1676493992641,"results":"16","hashOfConfig":"17"},{"size":795,"mtime":1677371582028,"results":"18","hashOfConfig":"17"},{"size":389,"mtime":1677115988502,"results":"19","hashOfConfig":"17"},{"size":231,"mtime":1676493992648,"results":"20","hashOfConfig":"17"},{"size":7525,"mtime":1677785211151,"results":"21","hashOfConfig":"17"},{"size":1598,"mtime":1677371584990,"results":"22","hashOfConfig":"17"},{"size":2451,"mtime":1677371580411,"results":"23","hashOfConfig":"17"},{"size":2412,"mtime":1677278987943,"results":"24","hashOfConfig":"17"},{"size":2992,"mtime":1677372257033,"results":"25","hashOfConfig":"17"},{"size":478,"mtime":1677108696268,"results":"26","hashOfConfig":"17"},{"size":5256,"mtime":1677372566188,"results":"27","hashOfConfig":"17"},{"size":950,"mtime":1677371583020,"results":"28","hashOfConfig":"17"},{"size":952,"mtime":1677371578180,"results":"29","hashOfConfig":"17"},{"size":953,"mtime":1677371577008,"results":"30","hashOfConfig":"17"},{"size":2396,"mtime":1677372600518,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1onoa0u",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},"C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\pages\\api\\hello.ts",[],[],"C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\pages\\index.tsx",[],[],"C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\pages\\_app.tsx",[],[],"C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\pages\\_document.tsx",[],[],"C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\components\\UploadArt.tsx",[],[],"C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\pages\\dashboard.tsx",[],[],"C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\pages\\login.tsx",[],[],"C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\components\\DeleteArt.tsx",["81"],[],"import styles from '../styles/Admin.module.scss'\r\nimport {DocumentData, QueryDocumentSnapshot} from \"@firebase/firestore/lite\";\r\nimport { collection, getDocs,doc, deleteDoc  } from \"@firebase/firestore\";\r\nimport React, { useEffect, useState} from 'react';\r\nimport { firestore } from '../firebase/clientApp'\r\nimport Image from 'next/image'\r\nimport { getStorage, ref, deleteObject } from \"firebase/storage\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst DeleteArt = () => {\r\n\r\n  const [art,setArt] = useState<QueryDocumentSnapshot<DocumentData>[]>([]); // array to hold the art\r\n  const [title, setTitle] = useState<string>('title') // state to contain the 'title' of art onClick\r\n  const [url, setURL] = useState<string>('URL')\r\n  \r\n///<><><> This retrieves and diplays the firestore collection and file in Storage so that the user may \r\n///<><><> click image to delete the file and firestore collection data using function \"onClickDeleteArt\"\r\n\r\n  useEffect( () => {getArt(); },[title, url, art]); \r\n  \r\n   const artCollection = collection(firestore,'art');\r\n   const getArt = async () => {\r\n    const querySnapshot = await getDocs(artCollection);\r\n    const result: QueryDocumentSnapshot<DocumentData>[] = [];\r\n    querySnapshot.forEach((snapshot) => {\r\n      result.push(snapshot);\r\n    })\r\n    setArt(result);\r\n    };\r\n\r\n\r\n    const storage = getStorage();\r\n// Create a reference to the file to delete\r\n    const artRef = ref(storage, `${url}`);\r\n    const artInfoRef = doc(firestore, 'art', `${title}`);\r\n\r\n    const onClickDeleteArt = () => {\r\n  \r\n        let question = confirm('Are you sure you want to this delete Image?')\r\n        if (question == true){\r\n               // Delete the file\r\n    deleteObject(artRef).then(() => {\r\n        deleteDoc(artInfoRef)\r\n  \r\n    }).catch((error) => {\r\n  // Uh-oh, an error occurred!\r\n    });\r\n\r\n        } else { return null}\r\n }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n<section className={styles.DELETEgrid}>\r\n    \r\n    {art && art.map((art,index) => {\r\n    \r\n   \r\n    \r\n    \r\n\r\n    return (\r\n \r\n   <>\r\n  \r\n    <figure className={styles.IMGwrap} >\r\n    <Image  onPointerDown={()=> {setTitle(art.data().title), setURL(art.data().url);}} onPointerUp={onClickDeleteArt} src={art.data().url} alt=\"Gallery Image\" key={art.id} width={640} height={360} priority={true} unoptimized />\r\n    </figure>\r\n        \r\n</>\r\n\r\n\r\n    )\r\n    \r\n    \r\n  })}\r\n    </section>\r\n\r\n</>\r\n\r\n\r\n\r\n  )}\r\n\r\n  export default DeleteArt\r\n","C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\components\\navbar.tsx",["82","83","84","85","86","87","88","89","90","91"],[],"import Link from \"next/link\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport styles from '../styles/Admin.module.scss'\r\n\r\nconst Navbar = ({ children }: { children: React.ReactNode }) => {\r\n  const { user, logOut } = useAuth();\r\n  const router = useRouter();\r\n\r\n\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logOut();\r\n      router.push(\"/login\");\r\n    } catch (error: any) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n  \r\n        <section className={styles.NAVcontainer}>\r\n        <nav className={styles.NAV_BAR }>\r\n          <ul>\r\n            <>\r\n              {!user.uid ? (\r\n               null\r\n              ) : ( \r\n                <>\r\n                     <span className={styles.Wave_outset}>\r\n                    <span className={styles.Wave_inset}>\r\n                    <div onClick={handleLogout}>\r\n                    <img className={styles.LogoutIcon} style={{opacity:'0.5', cursor:'pointer'}} src='https://raw.githubusercontent.com/gist/MCB7/63a21618d00f7cca2ffe616250d65db3/raw/581d763e7f4d390d39bbe58c140a4065a2dbd460/logout_icon.svg'/>\r\n                    </div>\r\n                    </span>\r\n                    </span>\r\n          \r\n                    <div>\r\n                    <Link href={'/dashboard'} style={{ textDecoration: 'none' }}>    \r\n                    <span><img style={{scale: '1.5'}} src='https://raw.githubusercontent.com/gist/MCB7/758c5523914c42af62c1aca2ec63fddf/raw/33869dbd448cc2fea85ca09ee2301f1b6d6321bf/home_icon.svg'/></span>\r\n                    </Link>\r\n                    </div>\r\n                \r\n                    <div>\r\n                    <Link href={'/Upload'} style={{ textDecoration: 'none' }}>    \r\n                    <span><img style={{scale: '1.75'}} src='https://raw.githubusercontent.com/gist/MCB7/5e8d14a2c050f65ae59c82789e3e5042/raw/fec1751ce38a48dc2897edc52e60867dbeb466e0/upload_icon.svg'/></span>\r\n                    </Link>\r\n                    </div>\r\n               \r\n                    <div>\r\n                    <Link href={'/Update'} style={{ textDecoration: 'none' }}>    \r\n                    <span><img style={{scale: '1.5'}} src='https://raw.githubusercontent.com/gist/MCB7/8dd0021623f68bc81328f1316202a120/raw/73f526004ef4d707c6f1d074490d5f944c3a1621/update_icon.svg'/></span>\r\n                    </Link>\r\n                    </div>\r\n\r\n                    <div>\r\n                         <Link href={'/Delete'} style={{ textDecoration: 'none' }}>    \r\n                         <span><img   style={{scale: '1.75'}} src='https://raw.githubusercontent.com/gist/MCB7/66fbec03358e9c05b8becd922a670e3a/raw/c46070705312a93a951dfa1ed82e1f6d38dd1133/delete_icon.svg'/></span>\r\n                    </Link>\r\n                    </div>\r\n              \r\n                </>\r\n              )}\r\n            </>\r\n          </ul>\r\n        </nav>\r\n        </section>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;","C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\components\\ProtectedRoute.tsx",[],[],"C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\components\\UpdateArt.tsx",["92"],[],"import { useState, useEffect } from 'react';\r\nimport { firestore } from '../firebase/clientApp';\r\nimport styles from '../styles/Admin.module.scss'\r\nimport {DocumentData, QueryDocumentSnapshot} from \"@firebase/firestore/lite\";\r\nimport { collection, getDocs,updateDoc, doc } from \"@firebase/firestore\";\r\nimport Image from 'next/image'\r\nimport ProtectedRoute from \"../components/ProtectedRoute\";\r\nimport UpdateBio from \"../components/UpdateBio\";\r\n\r\n\r\nconst UpdateArt = () => {\r\n\r\nconst [art,setArt] = useState<QueryDocumentSnapshot<DocumentData>[]>([]); // array to hold the art\r\nuseEffect( () => {getArt(); },[art]); \r\n  \r\nconst artCollection = collection(firestore,'art');\r\nconst getArt = async () => {\r\n const querySnapshot = await getDocs(artCollection);\r\n const result: QueryDocumentSnapshot<DocumentData>[] = [];\r\n querySnapshot.forEach((snapshot) => {\r\n   result.push(snapshot);\r\n })\r\n setTimeout(() => {\r\n    setArt(result);\r\n }, 1000);\r\n\r\n };\r\n\r\n\r\n//<> <> <> letting user know if error occurs for updating image/info <> <> <>\r\nconst [error,setError] = useState<string>(\"\");\r\n//<> <> <> letting user know image/info has updated <> <> <>\r\nconst [msg,setMessage] = useState<any>(\"\");\r\n\r\n//<> <> <> these will be the fields of the firestore database collection <> <> <>\r\nconst[title, setTitle]  =  useState<string>('');\r\nconst[date, setDate]  =  useState<string>('');\r\nconst[dimensions, setDimensions]  =  useState<string>('');\r\nconst[medium, setMedium]  =  useState<string>('');\r\nconst[price, setPrice]  =  useState<string>('');\r\n\r\nconst[newTitle, setnewTitle]  =  useState<string>(title);\r\nconst[newDate, setnewDate]  =  useState<string>(date);\r\nconst[newDimensions, setnewDimensions]  =  useState<string>(dimensions);\r\nconst[newMedium, setnewMedium]  =  useState<string>(medium);\r\nconst[newPrice, setnewPrice]  =  useState<string>(price);\r\n\r\n\r\n\r\nconst handleSubmit = (e: { preventDefault: () => void; }) => {\r\n    e.preventDefault(); // avoid default behaviour else the page refreshes \r\n}\r\n\r\nuseEffect(() => {\r\n\r\n\r\n \r\n}, [newTitle,newDate, newDimensions, newMedium, newPrice])\r\n\r\n \r\n\r\nconst UpdateDate =  () => {\r\n\r\nconst Ref = doc(firestore, \"art\", `${title}`);\r\nupdateDoc(Ref, {\r\n    date: newDate,\r\n\r\n  });\r\n}\r\nconst UpdateDimensions =  () => {\r\n\r\n    const Ref = doc(firestore, \"art\", `${title}`);\r\n    updateDoc(Ref, {\r\n        dimensions:newDimensions,\r\n      \r\n      });\r\n    }\r\nconst UpdateMedium=  () => {\r\n\r\nconst Ref = doc(firestore, \"art\", `${title}`);\r\nupdateDoc(Ref, {\r\n    medium:newMedium,\r\n   \r\n  });\r\n}\r\n\r\nconst UpdatePrice=  () => {\r\n\r\n    const Ref = doc(firestore, \"art\", `${title}`);\r\n    updateDoc(Ref, {\r\n\r\n        price:newPrice\r\n      });\r\n    }\r\n\r\n\r\n    return (\r\n\r\n      <ProtectedRoute>\r\n\r\n     \r\n\r\n{art && art.map((art,index) => {\r\n    \r\n    return (\r\n\r\n  \r\n    <section className={styles.UPDATEcontainer} key={art.id}>\r\n    \r\n    <div className={styles.UpdateImage}>\r\n\r\n    <Image src={art.data().url} alt=\"Gallery Image\" onClick={() => {\r\n        \r\n        setTitle(art.data().title)\r\n        setDate(art.data().date)\r\n        setDimensions(art.data().dimensions)\r\n        setMedium(art.data().medium)\r\n        setPrice(art.data().price)\r\n       alert(`${art.data().title} is selected for update`)\r\n\r\n      }} key={art.id} width={640} height={360} priority={true} unoptimized tabIndex={0}/>\r\n\r\n    </div>\r\n\r\n    <div className={styles.UpdateInfo}>\r\n\r\n        <ul>\r\n   \r\n        <div>\r\n        {art.data().title}\r\n        </div>\r\n    \r\n        <div>\r\n        {art.data().date}\r\n        </div>\r\n     \r\n        <div>\r\n        {art.data().dimensions}\r\n        </div>\r\n       \r\n        <div>\r\n        {art.data().medium}\r\n        </div>\r\n   \r\n        <div>\r\n        {art.data().price}\r\n        </div>\r\n  \r\n        \r\n        </ul>\r\n    \r\n    </div>\r\n\r\n    <div className={styles.UpdateInputs}>\r\n\r\n                        <input type=\"text\" \r\n                        placeholder={art.data().date}\r\n                        onChange={e => setnewDate(e.target.value)}\r\n                       \r\n                        />\r\n      <button onClick={() => {UpdateDate()}}> Update </button>                   \r\n\r\n                        <input type=\"text\" \r\n                        placeholder={art.data().dimensions}\r\n                        onChange={e => setnewDimensions(e.target.value)}\r\n                   \r\n                        />\r\n      <button onClick={() => {UpdateDimensions()}}> Update </button>\r\n\r\n                        <input type=\"text\" \r\n                        placeholder={art.data().medium}\r\n                        onChange={e => setnewMedium(e.target.value)}\r\n             \r\n                        />\r\n      <button onClick={() => {UpdateMedium()}}> Update </button>\r\n   \r\n                        <input type=\"text\" \r\n                        placeholder={art.data().price}\r\n                        onChange={e => setnewPrice(e.target.value)}\r\n                 \r\n                        />\r\n      <button onClick={() => {UpdatePrice()}}> Update </button>\r\n    \r\n                        \r\n    </div>                                        \r\n                        \r\n    </section>\r\n    \r\n   \r\n    )\r\n\r\n    \r\n  })}\r\n\r\n    \r\n\r\n  <UpdateBio/>\r\n\r\n\r\n\r\n</ProtectedRoute>\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default UpdateArt;","C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\pages\\Delete.tsx",[],[],"C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\pages\\Update.tsx",[],[],"C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\pages\\Upload.tsx",[],[],"C:\\Users\\morga\\Desktop\\Next.js-Admin\\nextjs-image-gallery-admin\\components\\UpdateBio.tsx",["93"],[],"import { useState, useEffect } from 'react';\r\nimport { firestore } from '../firebase/clientApp';\r\nimport styles from '../styles/Admin.module.scss'\r\nimport {DocumentData, QueryDocumentSnapshot} from \"@firebase/firestore/lite\";\r\nimport { collection, getDocs,updateDoc, doc } from \"@firebase/firestore\";\r\nimport Image from 'next/image'\r\nimport ProtectedRoute from \"../components/ProtectedRoute\";\r\n\r\n\r\nconst UpdateBio = () => {\r\n\r\nconst [about,setAbout] = useState<QueryDocumentSnapshot<DocumentData>[]>([]); // array to hold the art\r\nuseEffect( () => {getAbout(); },[about]); \r\n  \r\nconst aboutCollection = collection(firestore,'About');\r\nconst getAbout= async () => {\r\n const querySnapshot = await getDocs(aboutCollection);\r\n const result: QueryDocumentSnapshot<DocumentData>[] = [];\r\n querySnapshot.forEach((snapshot) => {\r\n   result.push(snapshot);\r\n })\r\n setTimeout(() => {\r\n    setAbout(result);\r\n }, 1000);\r\n\r\n };\r\n\r\n\r\n\r\n\r\n//<> <> <> these will be the fields of the firestore database collection <> <> <>\r\nconst[bio, setBio]  =  useState<string>('iFVDvkl4HamfnHMWEl0B');\r\n\r\n\r\nconst[newBio, setnewBio]  =  useState<string>(bio);\r\n\r\n\r\nconst handleSubmit = (e: { preventDefault: () => void; }) => {\r\n    e.preventDefault(); // avoid default behaviour else the page refreshes \r\n}\r\n\r\nuseEffect(() => {}, [newBio])\r\n\r\n \r\nconst UpdateBio =  () => {\r\n\r\nconst Ref = doc(firestore, \"About\", `${bio}`);\r\nupdateDoc(Ref, {\r\n    bio: newBio,\r\n\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n      <>\r\n\r\n     \r\n\r\n{about && about.map((about,index) => {\r\n    \r\n    return (\r\n\r\n  \r\n    <section className={styles.ABOUTcontainer} key={about.id}>\r\n    \r\n\r\n    <div className={styles.ABOUT} >\r\n\r\n        <ul>\r\n   \r\n     \r\n   \r\n        <div >\r\n        {about.data().bio}\r\n        </div>\r\n  \r\n        \r\n        </ul>\r\n    \r\n    </div>\r\n\r\n    <div className={styles.aboutUPDATE}>\r\n\r\n                        <textarea \r\n                        placeholder={about.data().bio}\r\n                        onChange={e => setnewBio(e.target.value)}\r\n                       \r\n                        />\r\n      <button onClick={() => {UpdateBio()}}> Update </button>                   \r\n\r\n                    \r\n    \r\n                        \r\n    </div>                                        \r\n                        \r\n    </section>\r\n    \r\n   \r\n    )\r\n\r\n    \r\n  })}\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n</>\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default UpdateBio;",{"ruleId":"94","severity":1,"message":"95","line":23,"column":33,"nodeType":"96","endLine":23,"endColumn":50,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":34,"column":21,"nodeType":"100","endLine":34,"endColumn":243},{"ruleId":"101","severity":1,"message":"102","line":34,"column":21,"nodeType":"100","endLine":34,"endColumn":243},{"ruleId":"98","severity":1,"message":"99","line":41,"column":27,"nodeType":"100","endLine":41,"endColumn":198},{"ruleId":"101","severity":1,"message":"102","line":41,"column":27,"nodeType":"100","endLine":41,"endColumn":198},{"ruleId":"98","severity":1,"message":"99","line":47,"column":27,"nodeType":"100","endLine":47,"endColumn":201},{"ruleId":"101","severity":1,"message":"102","line":47,"column":27,"nodeType":"100","endLine":47,"endColumn":201},{"ruleId":"98","severity":1,"message":"99","line":53,"column":27,"nodeType":"100","endLine":53,"endColumn":200},{"ruleId":"101","severity":1,"message":"102","line":53,"column":27,"nodeType":"100","endLine":53,"endColumn":200},{"ruleId":"98","severity":1,"message":"99","line":59,"column":32,"nodeType":"100","endLine":59,"endColumn":208},{"ruleId":"101","severity":1,"message":"102","line":59,"column":32,"nodeType":"100","endLine":59,"endColumn":208},{"ruleId":"94","severity":1,"message":"95","line":14,"column":31,"nodeType":"96","endLine":14,"endColumn":36,"suggestions":"103"},{"ruleId":"94","severity":1,"message":"104","line":13,"column":33,"nodeType":"96","endLine":13,"endColumn":40,"suggestions":"105"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getArt'. Either include it or remove the dependency array.","ArrayExpression",["106"],"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Use `<Image />` from `next/image` instead to utilize Image Optimization. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["107"],"React Hook useEffect has a missing dependency: 'getAbout'. Either include it or remove the dependency array.",["108"],{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [title, url, art, getArt]",{"range":"115","text":"116"},"Update the dependencies array to be: [art, getArt]",{"range":"117","text":"118"},"Update the dependencies array to be: [about, getAbout]",{"range":"119","text":"120"},[950,967],"[title, url, art, getArt]",[607,612],"[art, getArt]",[563,570],"[about, getAbout]"]